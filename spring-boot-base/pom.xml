<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>My-Leaning</artifactId>
        <groupId>com.jxk</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-boot-base</artifactId>
    <name>spring-base</name>

    <properties>
        <java.version>1.8</java.version>
        <maven.plugin.version>3.8.1</maven.plugin.version>
        <maven.test.skip>true</maven.test.skip>
        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!--设置spring-boot的大版本号,其子模块可不再设置版本号如spring-boot-starter-web，
        查询子模块本号可去仓库地址（下方）搜索搜索-->
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--配置不同的profile，对应不同的生产环境-->
    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <!-- 之前写的@activeEnvironment@就是通过这里的配置配合resources配置切换环境 -->
                <activeEnvironment>dev</activeEnvironment>
            </properties>
            <activation>
                <!-- 指定缺省环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <activeEnvironment>test</activeEnvironment>
            </properties>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <activeEnvironment>prod</activeEnvironment>
            </properties>
        </profile>
    </profiles>

    <build>
        <!--设置打包文件名字-->
        <finalName>${project.name}</finalName>
        <plugins>
            <!--spring-boot-maven-plugin的版本设置,
            spring Boot Maven plugin能够将Spring Boot应用打包为可执行的jar或war文件，
            然后以通常的方式运行Spring Boot应用。-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--jdk的版本设置,可防止协作不统一-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!--打包跳过测试,增加速度-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>

        <!--对非java文件进行处理进行处理-->
        <resources>
            <resource>
                <!--设置文件夹-->
                <directory>src/main/resources</directory>
                <!--对文件内的变量(@标签内的变量)进行替换-->
                <filtering>true</filtering>
                <!--正向匹配-->
                <includes>
                    <include>application.yml</include>
                </includes>
            </resource>
            <resource>
                <!--设置文件夹-->
                <directory>src/main/resources</directory>
                <!--不对文件内的变量进行替换-->
                <filtering>false</filtering>
                <excludes>
                    <exclude>application.yml</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <!--设置依赖下载源，导入失败时可注掉重新导入-->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://maven.aliyun.com/repository/central</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>